{"version":3,"sources":["img/logo64.svg","component/Header.js","component/Footer.js","component/ButtonSubmit.js","component/RequirementContainer.js","component/MainInput.js","component/Shape.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","href","src","Logo","alt","to","className","React","Component","Footer","ButtonSubmit","props","disabled","this","children","RequirementContainer","MainInput","htmlFor","id","type","min","Shape","shapeService","bind","fetch","method","headers","response","json","data","console","log","App","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fac777ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo64.ce9d2539.svg\";","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Logo from '../img/logo64.svg';\r\nimport './Header.css';\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <Router>\r\n                    <a href=\"http://localhost:3000/\"><img src={Logo} alt=\"Logo\"></img></a>\r\n                    <div>\r\n                        <ul>\r\n                            <li><Link to=\"/\" className=\"active\">Home</Link></li>\r\n                            <li><Link to=\"/shapes\">Shapes</Link></li>\r\n                            <li><Link to=\"/account\">Account</Link></li>\r\n                        </ul>\r\n                        <div>\r\n                            <Link to=\"/sign-in\" className=\"submit\">Sign In</Link>\r\n                            <Link to=\"/sign-up\" className=\"submit-alt\">Sign Up</Link>\r\n                        </div>\r\n                        {/* <div>\r\n                        <Link to=\"/\" className=\"reset\">Sign Out</Link>\r\n                    </div> */}\r\n                    </div>\r\n\r\n                </Router>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './Footer.css'\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                Shape App &copy; 2019 by Satriya Wicaksana\r\n            </footer>\r\n        );\r\n    }\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './ButtonSubmit.css';\r\n\r\nclass ButtonSubmit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"button-submit\" disabled={this.props.disabled} >{this.props.children}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonSubmit;","import React, { Component } from 'react';\r\nimport ButtonSubmit from './ButtonSubmit'\r\nimport './RequirementContainer.css';\r\n\r\nclass RequirementContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"requirement-container\">\r\n                <ButtonSubmit disabled={this.props.disabled}>\r\n                    <ul>\r\n                        <li>Width</li>\r\n                        <li>Height</li>\r\n                    </ul>\r\n                </ButtonSubmit>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default RequirementContainer;","import React, { Component } from 'react';\r\nimport './MainInput.css';\r\n\r\nclass MainInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor={this.props.id}>{this.props.children}</label><br />\r\n                <input type={this.props.type} min={this.props.min} id={this.props.id}></input>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MainInput;","import React from 'react';\r\nimport './Shape.css'\r\n\r\nclass Shape extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.shapeService = this.shapeService.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.shapeService();\r\n    }\r\n\r\n    async shapeService() {\r\n        const response = await fetch('http://localhost:8080/shapes', {\r\n            method: 'GET',\r\n            //mode: 'no-cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"shape-container\">\r\n                <p>Rectangle</p>\r\n                <button>view</button>\r\n                {/* <div><a href=\"http://localhost:8080\">view</a></div> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shape;","import React from 'react';\nimport Header from './component/Header';\nimport Footer from './component/Footer';\nimport ButtonSubmit from './component/ButtonSubmit';\nimport RequirementContainer from './component/RequirementContainer';\nimport MainInput from './component/MainInput';\nimport Shape from './component/Shape';\nimport './App.css';\n\nfunction App() {\n  /** Palette Warna\n   *  green : #07F165\n   *  blue : #1CDDD1\n   * */\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <section>\n          <div className=\"user-shape\">\n            <div>\n              <select>\n                <option value=\"hehe\">Andi Vermansyah</option>\n                <option value=\"hehe\">Marcus Gideon</option>\n                <option value=\"hehe\">Bambang Pamungkas</option>\n                <option value=\"hehe\">Jowo Anwar</option>\n                <option value=\"hehe\">Siapa lagi ya</option>\n              </select>\n              <button>Add</button>\n              <button>Delete</button>\n            </div>\n            <section>\n              <Shape />\n              <Shape />\n              <Shape />\n              <Shape />\n              <Shape />\n              <Shape />\n            </section>\n          </div>\n        </section>\n        <section>\n          <div className=\"signup-form\">\n            <form>\n              <MainInput type=\"text\" id=\"signup-username\">Username</MainInput>\n              <MainInput type=\"password\" id=\"signup-password\">Password</MainInput>\n              <MainInput type=\"password\" id=\"signup-confirmPassword\">Confirm Password</MainInput>\n              <MainInput type=\"password\" id=\"signup-fullName\">Full Name</MainInput>\n              <div className=\"signup-submit\">\n                <ButtonSubmit>Sign Up</ButtonSubmit>\n              </div>\n            </form>\n          </div>\n        </section>\n        <section>\n          <div className=\"signin-form\">\n            <form>\n              <MainInput type=\"text\" id=\"signin-username\">Username</MainInput>\n              <MainInput type=\"password\" id=\"signin-password\">Password</MainInput>\n              <div className=\"signin-submit\">\n                <ButtonSubmit>Sign In</ButtonSubmit>\n              </div>\n            </form>\n          </div>\n        </section>\n        <section>\n          <section className=\"shape-section\">\n            <h2>Rectangle</h2>\n            <p>Requirement</p>\n            <RequirementContainer />\n            <RequirementContainer disabled />\n            <RequirementContainer disabled />\n          </section>\n          <section className=\"calculate-shape\">\n            <div>\n              <MainInput type=\"number\" min=\"0\" id=\"shape-requirement1\">Width (in cm)</MainInput>\n              <MainInput type=\"number\" min=\"0\" id=\"shape-requirement2\">Height (in cm)</MainInput>\n              <ButtonSubmit>Calculate</ButtonSubmit>\n            </div>\n          </section>\n          <section className=\"shape-result\">\n            <dl>\n              <dt><h3>Area</h3></dt>\n              <dd>20cm<sup>2</sup></dd>\n              <dt><h3>Categories</h3></dt>\n              <dd>\n                <ol>\n                  <li>Square</li>\n                  <li>Trapezium</li>\n                  <li>Square</li>\n                  <li>Trapezium</li>\n                </ol>\n              </dd>\n            </dl>\n            <ButtonSubmit>SAVE</ButtonSubmit>\n          </section>\n        </section>\n        <section>\n          <Shape />\n          <Shape />\n          <Shape />\n          <Shape />\n          <Shape />\n          <Shape />\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Routers from './Routers';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}